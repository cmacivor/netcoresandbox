@page "/bingmap"
@inject IJSRuntime JsRuntime;
@inject BingMapService BingMapService

<h2>Bing address validation demo</h2>
<label>Client Address:</label>
<input type="text" class="form-control" onblur="@OpenModal" id="inputClientAddress" placeholder="Search Address"/>


<div class="modal fade" id="addressModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Address Modal</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
          <div class="row">
             <div class="alert alert-primary">
                @RetrievedAddress.addressLine
             </div>
          </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>


@functions {

    private BingServer.Address RetrievedAddress = new BingServer.Address();

    public async Task<object> OpenModal()
    {
        //first let's call the Bing service
        var address = await BingMapService.GetAddresses();

        RetrievedAddress = address.resourceSets.FirstOrDefault().resources.FirstOrDefault().address;

        return JsRuntime.InvokeAsync<object>("BingMap.OpenModalOnSearch"); 
    }

}